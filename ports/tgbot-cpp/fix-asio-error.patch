diff --git a/include/tgbot/net/BoostHttpOnlySslClient.h b/include/tgbot/net/BoostHttpOnlySslClient.h
index dbe0c96..b4e3bac 100644
--- a/include/tgbot/net/BoostHttpOnlySslClient.h
+++ b/include/tgbot/net/BoostHttpOnlySslClient.h
@@ -33,7 +33,7 @@ public:
     std::string makeRequest(const Url& url, const std::vector<HttpReqArg>& args) const override;
 
 private:
-    mutable boost::asio::io_service _ioService;
+    mutable boost::asio::io_context _ioService;
     const HttpParser _httpParser;
 };
 
diff --git a/include/tgbot/net/HttpServer.h b/include/tgbot/net/HttpServer.h
index 55c7f8e..1c96b6d 100644
--- a/include/tgbot/net/HttpServer.h
+++ b/include/tgbot/net/HttpServer.h
@@ -160,7 +160,7 @@ protected:
         });
     }
 
-    boost::asio::io_service _ioService;
+    boost::asio::io_context _ioService;
     boost::asio::basic_socket_acceptor<Protocol> _acceptor;
     boost::asio::basic_stream_socket<Protocol> _socket;
     const ServerHandler _handler;
diff --git a/src/net/BoostHttpOnlySslClient.cpp b/src/net/BoostHttpOnlySslClient.cpp
index 30279e6..7f3f2c2 100644
--- a/src/net/BoostHttpOnlySslClient.cpp
+++ b/src/net/BoostHttpOnlySslClient.cpp
@@ -19,14 +19,13 @@ BoostHttpOnlySslClient::~BoostHttpOnlySslClient() {
 
 string BoostHttpOnlySslClient::makeRequest(const Url& url, const vector<HttpReqArg>& args) const {
     tcp::resolver resolver(_ioService);
-    tcp::resolver::query query(url.host, "443");
 
     ssl::context context(ssl::context::tlsv12_client);
     context.set_default_verify_paths();
 
     ssl::stream<tcp::socket> socket(_ioService, context);
 
-    connect(socket.lowest_layer(), resolver.resolve(query));
+    connect(socket.lowest_layer(), resolver.resolve(url.host, "443"));
 
     #ifdef TGBOT_DISABLE_NAGLES_ALGORITHM
     socket.lowest_layer().set_option(tcp::no_delay(true));
@@ -41,7 +40,7 @@ string BoostHttpOnlySslClient::makeRequest(const Url& url, const vector<HttpReqA
     #endif //Processor architecture
     #endif //TGBOT_CHANGE_SOCKET_BUFFER_SIZE
     socket.set_verify_mode(ssl::verify_none);
-    socket.set_verify_callback(ssl::rfc2818_verification(url.host));
+    socket.set_verify_callback(ssl::host_name_verification(url.host));
 
     socket.handshake(ssl::stream<tcp::socket>::client);
 
@@ -69,7 +68,7 @@ string BoostHttpOnlySslClient::makeRequest(const Url& url, const vector<HttpReqA
         std::string sMsg("TIMEOUT on read client data. Client IP: ");
         
         sMsg.append(socket.next_layer().remote_endpoint().address().to_string());
-        _ioService.reset();
+        _ioService.restart();
         
         throw std::exception();
     }      
