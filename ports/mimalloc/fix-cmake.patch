diff --git a/CMakeLists.txt b/CMakeLists.txt
index 35460e8..6f70cc5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -257,13 +257,27 @@ if(MI_BUILD_SHARED)
   )
   if(WIN32)
     # On windows copy the mimalloc redirection dll too.
-    target_link_libraries(mimalloc PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/bin/mimalloc-redirect.lib)
-    add_custom_command(TARGET mimalloc POST_BUILD
-      COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_CURRENT_SOURCE_DIR}/bin/mimalloc-redirect.dll" $<TARGET_FILE_DIR:mimalloc>
-      COMMENT "Copy mimalloc-redirect.dll to output directory")
+    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
+      target_link_libraries(mimalloc PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/bin/mimalloc-redirect.lib)
+      add_custom_command(TARGET mimalloc POST_BUILD
+        COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_CURRENT_SOURCE_DIR}/bin/mimalloc-redirect.dll" $<TARGET_FILE_DIR:mimalloc>
+        COMMENT "Copy mimalloc-redirect.dll to output directory")
+      install (
+        FILES $<TARGET_FILE_DIR:mimalloc>/mimalloc-redirect.dll
+        DESTINATION bin
+      )
+    elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
+      target_link_libraries(mimalloc PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/bin/mimalloc-redirect32.lib)
+      add_custom_command(TARGET mimalloc POST_BUILD
+      COMMAND "${CMAKE_COMMAND}" -E copy "${CMAKE_CURRENT_SOURCE_DIR}/bin/mimalloc-redirect32.dll" $<TARGET_FILE_DIR:mimalloc>
+      COMMENT "Copy mimalloc-redirect32.dll to output directory")
+      install (
+        FILES $<TARGET_FILE_DIR:mimalloc>/mimalloc-redirect32.dll
+        DESTINATION bin
+      )
+    endif()
   endif()
-
-  install(TARGETS mimalloc EXPORT mimalloc DESTINATION ${mi_install_dir} LIBRARY)
+  install(TARGETS mimalloc EXPORT mimalloc ARCHIVE DESTINATION lib RUNTIME DESTINATION bin LIBRARY DESTINATION lib NAMELINK_SKIP)
   install(EXPORT mimalloc DESTINATION ${mi_install_dir}/cmake)
 endif()
 
@@ -286,8 +300,7 @@ if (MI_BUILD_STATIC)
   else()
     set_target_properties(mimalloc-static PROPERTIES OUTPUT_NAME ${mi_basename})
   endif()
-
-  install(TARGETS mimalloc-static EXPORT mimalloc DESTINATION ${mi_install_dir})
+  install(TARGETS mimalloc-static EXPORT mimalloc DESTINATION lib)
 endif()
 
 # install include files
diff --git a/src/alloc.c b/src/alloc.c
index 8e863a6..cd0e463 100644
--- a/src/alloc.c
+++ b/src/alloc.c
@@ -403,13 +403,13 @@ static inline mi_segment_t* mi_checked_ptr_segment(const void* p, const char* ms
   if (mi_unlikely(segment == NULL)) return NULL;  // checks also for (p==NULL)
 
 #if (MI_DEBUG>0)
-  if (mi_unlikely(!mi_is_in_heap_region(p))) {
-    _mi_warning_message("%s: pointer might not point to a valid heap region: %p\n"
-      "(this may still be a valid very large allocation (over 64MiB))\n", msg, p);
-    if (mi_likely(_mi_ptr_cookie(segment) == segment->cookie)) {
-      _mi_warning_message("(yes, the previous pointer %p was valid after all)\n", p);
-    }
-  }
+//  if (mi_unlikely(!mi_is_in_heap_region(p))) {
+//    _mi_warning_message("%s: pointer might not point to a valid heap region: %p\n"
+//      "(this may still be a valid very large allocation (over 64MiB))\n", msg, p);
+//    if (mi_likely(_mi_ptr_cookie(segment) == segment->cookie)) {
+//      _mi_warning_message("(yes, the previous pointer %p was valid after all)\n", p);
+//    }
+//  }
 #endif
 #if (MI_DEBUG>0 || MI_SECURE>=4)
   if (mi_unlikely(_mi_ptr_cookie(segment) != segment->cookie)) {
diff --git a/src/os.c b/src/os.c
index 6985587..afba52d 100644
--- a/src/os.c
+++ b/src/os.c
@@ -730,7 +730,7 @@ static bool mi_os_commitx(void* addr, size_t size, bool commit, bool conservativ
     _mi_warning_message("%s error: start: %p, csize: 0x%x, err: %i\n", commit ? "commit" : "decommit", start, csize, err);
     mi_mprotect_hint(err);
   }
-  mi_assert_internal(err == 0);
+  //mi_assert_internal(err == 0);
   return (err == 0);
 }
 
diff --git a/src/region.c b/src/region.c
index b6d0da3..c844a03 100644
--- a/src/region.c
+++ b/src/region.c
@@ -331,7 +331,7 @@ static void* mi_region_try_alloc(size_t blocks, bool* commit, bool* is_large, bo
   #endif
   
   // and return the allocation  
-  mi_assert_internal(p != NULL);  
+  //mi_assert_internal(p != NULL);
   return p;
 }
 
