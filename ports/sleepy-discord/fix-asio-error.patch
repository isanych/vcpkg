diff --git a/include/sleepy_discord/asio_include.h b/include/sleepy_discord/asio_include.h
index 06dfc31..8523d4c 100644
--- a/include/sleepy_discord/asio_include.h
+++ b/include/sleepy_discord/asio_include.h
@@ -29,6 +29,28 @@
 		namespace asio {
 			using namespace boost::asio;
 			using boost::system::error_code;
+
+			#if BOOST_VERSION >= 108700
+				using io_service = boost::asio::io_context;
+				using const_buffers_1 = boost::asio::const_buffer;
+				using mutable_buffers_1 = boost::asio::mutable_buffer;
+				using io_context_work = boost::asio::executor_work_guard<boost::asio::io_context::executor_type>;
+				/// Cast a non-modifiable buffer to a specified pointer to POD type.
+				template <typename PointerToPodType>
+				inline PointerToPodType buffer_cast(const mutable_buffer& b) noexcept
+				{
+					return static_cast<PointerToPodType>(b.data());
+				}
+
+				/// Cast a non-modifiable buffer to a specified pointer to POD type.
+				template <typename PointerToPodType>
+				inline PointerToPodType buffer_cast(const const_buffer& b) noexcept
+				{
+					return static_cast<PointerToPodType>(b.data());
+				}
+			#else
+				using io_context_work = boost::asio::io_service::work;
+			#endif
 		}
 		#ifdef ASIO_STANDALONE
 			#undef ASIO_STANDALONE
diff --git a/sleepy_discord/asio_udp.cpp b/sleepy_discord/asio_udp.cpp
index bda81d8..435f5fc 100644
--- a/sleepy_discord/asio_udp.cpp
+++ b/sleepy_discord/asio_udp.cpp
@@ -19,7 +19,7 @@ namespace SleepyDiscord {
 
 	bool ASIOUDPClient::connect(const std::string & to, const uint16_t port) {
 		if (iOService == nullptr) return false;
-		endpoint = *resolver.resolve({ asio::ip::udp::v4(), to, std::to_string(port) });
+		endpoint = resolver.resolve(asio::ip::udp::v4(), to, std::to_string(port)).begin()->endpoint();
 		return true;
 	}
 
