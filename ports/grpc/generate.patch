diff --git a/CMakeLists.txt b/CMakeLists.txt
index 73462d8..52970b6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -37602,6 +37602,7 @@ write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/gRPCConfigVersion.c
 install(FILES
     ${CMAKE_CURRENT_BINARY_DIR}/gRPCConfig.cmake
     ${CMAKE_CURRENT_BINARY_DIR}/gRPCConfigVersion.cmake
+    ${CMAKE_CURRENT_SOURCE_DIR}/cmake/gRPCGenerate.cmake
   DESTINATION ${gRPC_INSTALL_CMAKEDIR}
 )
 install(FILES
diff --git a/cmake/gRPCConfig.cmake.in b/cmake/gRPCConfig.cmake.in
index 2c0c7f7..d44084e 100644
--- a/cmake/gRPCConfig.cmake.in
+++ b/cmake/gRPCConfig.cmake.in
@@ -13,6 +13,7 @@ list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/modules)
 
 # Targets
 include(${CMAKE_CURRENT_LIST_DIR}/gRPCTargets.cmake)
+include(${CMAKE_CURRENT_LIST_DIR}/gRPCGenerate.cmake)
 if(@gRPC_BUILD_CODEGEN@)
   include(${CMAKE_CURRENT_LIST_DIR}/gRPCPluginTargets.cmake)
 endif()
diff --git a/cmake/gRPCGenerate.cmake b/cmake/gRPCGenerate.cmake
new file mode 100644
index 0000000..48aee83
--- /dev/null
+++ b/cmake/gRPCGenerate.cmake
@@ -0,0 +1,9 @@
+function(grpc_generate)
+  if(NOT gRPC_PROTO_GENS_DIR)
+    set(gRPC_PROTO_GENS_DIR ${CMAKE_CURRENT_BINARY_DIR})
+  endif()
+  if(NOT gRPC_CPP_PLUGIN)
+    get_target_property(gRPC_CPP_PLUGIN gRPC::grpc_cpp_plugin IMPORTED_LOCATION_RELEASE)
+  endif()
+  protobuf_generate(${ARGV} GENERATE_EXTENSIONS_ADD .grpc.pb.cc .grpc.pb.h _mock.grpc.pb.h ARGS_ADD --grpc_out=generate_mock_code=true:${gRPC_PROTO_GENS_DIR} --plugin=protoc-gen-grpc=${gRPC_CPP_PLUGIN} DEPENDS_ADD ${gRPC_CPP_PLUGIN})
+endfunction()
